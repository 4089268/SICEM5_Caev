@page "/PagoLinea"
@namespace Sicem_Blazor.PagoLinea.Views
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Charts
@using Sicem_Blazor.Models.PagoLinea

<div class="layoutPage">

    <div class="title-page" style="grid-area: 1/1/2/3;">CONSULTA DE INGRESOS DE PAGO EN LINEA</div>

    <div class="border rounded bg-white px-2 d-flex align-items-center" style="grid-area: 2/1/3/3;">
        <SeleccionarFecha ProcesarParam="@Procesar" MostrarPeriodos="false" OcultarSector="true" />
    </div>

    @* ****** Acciones ****** *@
    <div class="d-flex align-items-center" style="grid-area: 3/1/4/2;">
        @if(resumeIncomeMonth != null)
        {
            <div class="border rounded bg-white d-flex flex-column align-items-center justify-content-start p-4 mr-4">
                <div> Total importe cobrado</div>
                <div class="d-flex align-items-center justify-content-around">
                    <div class="fa-3x text-center w-100">@resumeIncomeMonth.TotalIncome.ToString("c2", currentCultueInfo )</div>
                    @if(resumeIncomeMonth.TotalIncome > resumeIncomeMonth.TotalIncomePrev )
                    {
                        <i>
                            <svg xmlns="http://www.w3.org/2000/svg" width="44" height="44" viewBox="0 0 24 24">
                                <path fill="#65a30d" d="M13.5 9a1 1 0 0 1 1-1H18a1 1 0 0 1 1 1v3.5a1 1 0 1 1-2 0v-1.086l-4.293 4.293a1 1 0 0 1-1.414 0L9 13.414l-2.293 2.293a1 1 0 0 1-1.414-1.414l3-3a1 1 0 0 1 1.414 0L12 13.586L15.586 10H14.5a1 1 0 0 1-1-1"/>
                            </svg>
                        </i>
                    }
                    else
                    {
                        <i>
                            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 14 14">
                                <path fill="#e11d48" fill-rule="evenodd" d="M1.898 3.222A1 1 0 1 0 .483 4.637l3.333 3.332l.007.007a1.457 1.457 0 0 0 2.039 0l.007-.007L7.57 6.268L9.917 8.75l-1.04 1.04a.75.75 0 0 0 .53 1.28h3.652a.75.75 0 0 0 .75-.75V6.67a.75.75 0 0 0-1.28-.53l-1.197 1.197l-2.704-2.86a1.457 1.457 0 0 0-2.066-.027v-.001l-.007.007l-1.713 1.712z" clip-rule="evenodd"/>
                            </svg>
                        </i>
                    }
                </div>
                <div class="text-muted">Importe cobrado mes anterior: @resumeIncomeMonth.TotalIncomePrev.ToString("c2", currentCultueInfo )</div>
            </div>

            <div class="border rounded bg-white d-flex flex-column align-items-center justify-content-around p-4 mr-4">
                <div> Pagos realizados</div>
                <div class="d-flex align-items-center justify-content-around">
                    <div class="fa-3x text-center w-100">@resumeIncomeMonth.TotalMovements.ToString("n0", currentCultueInfo )</div>
                    @if(resumeIncomeMonth.TotalMovements > resumeIncomeMonth.TotalMovementsPrev )
                    {
                        <i>
                            <svg xmlns="http://www.w3.org/2000/svg" width="44" height="44" viewBox="0 0 24 24">
                                <path fill="#65a30d" d="M13.5 9a1 1 0 0 1 1-1H18a1 1 0 0 1 1 1v3.5a1 1 0 1 1-2 0v-1.086l-4.293 4.293a1 1 0 0 1-1.414 0L9 13.414l-2.293 2.293a1 1 0 0 1-1.414-1.414l3-3a1 1 0 0 1 1.414 0L12 13.586L15.586 10H14.5a1 1 0 0 1-1-1"/>
                            </svg>
                        </i>
                    }
                    else
                    {
                        <i>
                            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 14 14">
                                <path fill="#e11d48" fill-rule="evenodd" d="M1.898 3.222A1 1 0 1 0 .483 4.637l3.333 3.332l.007.007a1.457 1.457 0 0 0 2.039 0l.007-.007L7.57 6.268L9.917 8.75l-1.04 1.04a.75.75 0 0 0 .53 1.28h3.652a.75.75 0 0 0 .75-.75V6.67a.75.75 0 0 0-1.28-.53l-1.197 1.197l-2.704-2.86a1.457 1.457 0 0 0-2.066-.027v-.001l-.007.007l-1.713 1.712z" clip-rule="evenodd"/>
                            </svg>
                        </i>
                    }
                </div>
                <div class="text-muted">Pagos realizados el mes anterior: @resumeIncomeMonth.TotalMovementsPrev.ToString("n0", currentCultueInfo )</div>
            </div>
        }
        else
        {
            <div class="border rounded bg-white d-flex flex-column align-items-center justify-content-around p-4 mr-4">
                <div> Total importe cobrado</div>
                <div class="fa-3x text-center w-100">0</div>
            </div>

            <div class="border rounded bg-white d-flex flex-column align-items-center justify-content-around p-4 mr-4">
                <div> Pagos realizados</div>
                <div class="fa-3x text-center w-100">0</div>
            </div>
        }
    </div>

    @* ****** Chart ****** *@
    <div class="border rounded bg-white p-1" style="grid-area: 4/1/5/2;">
        <SfChart @ref="GraficaIngresos" Title="Importe cobrado por Oficina">
            <ChartPrimaryXAxis Interval="1" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
            <ChartPrimaryYAxis Visible="true" LabelFormat="c2" />
            <ChartTooltipSettings Enable="true" Header="Importe" Format="<b>${point.x}</b> : ${point.y}" Shared="true"></ChartTooltipSettings>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@DatosGraficaImporte" Name="Importe Cobrado" XName="Descripcion" YName="Valor1" Type="ChartSeriesType.Bar" Fill="#440412">
                    <ChartMarker>
                        <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Outer" />
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    </div>

    @* ****** DataGrid ****** *@
    <div class="border rounded bg-white p-1" style="grid-area: 4/2/5/3;">
        <SfGrid @ref="DataGrid" DataSource="@DataOffices" TValue="ResumeOffice" AllowResizing="true" AllowSorting="true" AllowFiltering="false"
                AllowExcelExport="true" Height="100%" Width="100%" EnableHover="true" RowHeight="12">
            <GridColumns>
                <GridColumn Field="@nameof(ResumeOffice.OfficeName)" HeaderText="Oficina" TextAlign="TextAlign.Left" Width="100" />
                <GridColumn Field="@nameof(ResumeOffice.TotalIncome)" HeaderText="Importe cobrado" TextAlign="TextAlign.Right" Width="125" Format="c2" />
                <GridColumn Field="@nameof(ResumeOffice.TotalMovements)" HeaderText="Pagos realizados" TextAlign="TextAlign.Right" Width="120" Format="n0" />
                <GridColumn HeaderText="#" TextAlign="TextAlign.Center" Width="70">
                    <Template>
                        @{
                            var data = (context as ResumeOffice);
                            if (data.OfficeId > 0 && data.OfficeId < 90) {
                                <div class="d-flex align-items-center">
                                    <button type="button" class="btn btn-primary btn-sm mx-1" data-toggle="tooltip" data-placement="top" title="Detalle" @onclick="@(e => HandleShowDetails(data))">
                                        <i class="fa fa-table" aria-hidden="true"></i>
                                    </button>
                                </div>
                            }
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>

    <div style="grid-template: 5/1/6/3;"></div>
</div>


@* ****** Dialogos y ventanas secundarias ****** *@
<BusyIndicator Busy="@busyDialog" ContentText="Cargando datos...." />

<DetallePagosVtn @ref="detallePagosVtn" CerrarModal="HandleClosedDetallePagos" />

<style>
    .layoutPage
    {
        display: grid;
        grid-template-columns: calc(100% - 46rem) 45rem;
        grid-template-rows: 3rem 4rem 12rem 100%;
        grid-gap: 0.5rem;
        width: 100%;
        height: 100%;
        padding-bottom: 1rem;
    }
</style>