@page "/PonteAlCorriente"
@namespace Sicem_Blazor.PonteAlCorriente.Views
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Charts
@using Sicem_Blazor.PonteAlCorriente.Models

<div class="layoutPage">

    <div class="title-page" style="grid-area: 1/1/2/2;">PONTE AL CORRIENTE</div>

    <div class="border rounded bg-white px-2 d-flex align-items-center" style="grid-area: 2/1/3/2;">
        <SeleccionarFecha ProcesarParam="@Procesar" OcultarSector="true" />
    </div>

    @* ****** DataGrid ****** *@
    <div class="border rounded bg-white p-1" style="grid-area: 3/1/4/w;">
        <SfGrid @ref="DataGrid" DataSource="@DataOffices" TValue="ResumeOffice" AllowResizing="true" AllowSorting="true" AllowFiltering="false" AllowExcelExport="true" Height="100%" Width="100%" EnableHover="true" RowHeight="26">
            <GridColumns>
                <GridColumn HeaderText="" TextAlign="TextAlign.Center" Width="40">
                    <Template>
                        @{
                            var data = (context as ResumeOffice);
                            if(data.Id > 0 && data.Id < 999) {
                                @switch (data.Estatus) {

                                    case ResumenOficinaEstatus.Completado:
                                        <i class="fas fa-check-circle" style="color:green; font-size:1.5rem;"></i>
                                        break;

                                    case ResumenOficinaEstatus.Error:
                                        <i class="fas fa-exclamation-circle" style="color:red; font-size:1.5rem;"></i>
                                        break;

                                    default:
                                        <div class="spinner-border p-2" role="status"> </div>
                                        break;
                                }
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field="@nameof(ResumeOffice.Oficina)" HeaderText="Oficina" TextAlign="TextAlign.Left" Width="100" />
                <GridColumn Field="@nameof(ResumeOffice.NumDescuentos)" HeaderText="Numero de Descuentos" TextAlign="TextAlign.Right" Width="120" Format="n0" />
                <GridColumn Field="@nameof(ResumeOffice.ImporteDescontado)" HeaderText="Importe Descontado" TextAlign="TextAlign.Right" Width="125" Format="c2" />
                <GridColumn Field="@nameof(ResumeOffice.ImporteCobrado)" HeaderText="Importe cobrado" TextAlign="TextAlign.Right" Width="125" Format="c2" />
                <GridColumn HeaderText="Acciones" TextAlign="TextAlign.Center" Width="40">
                    <Template>
                        @{
                            var data = (context as ResumeOffice);
                            if (data.Id > 0 && data.Id < 90) {
                                <div class="d-flex align-items-center justify-content-center">
                                    <button type="button" class="btn btn-primary btn-sm mx-1" data-toggle="tooltip" data-placement="top" title="Detalle" disabled="@(data.Estatus != ResumenOficinaEstatus.Completado )" @onclick="@(e => DetalleClick(data))">
                                        <i class="fa fa-table" aria-hidden="true"></i>
                                    </button>
                                </div>
                            }
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>


@* ****** Dialogos y ventanas secundarias ****** *@
<BusyIndicator Busy="@busyDialog" ContentText="Cargando datos...." />
<DetalleOficinaVtn @ref="detalleOficina" CerrarModal="@(e => detalleOficinaVisible = false)" />

<style>
    .layoutPage
    {
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: 3rem 5rem 100%;
        grid-gap: 0.5rem;
        width: 100%;
        height: 100%;
        padding-bottom: 1rem;
    }
</style>