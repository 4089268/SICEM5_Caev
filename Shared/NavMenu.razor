@using MatBlazor
@inject IJSRuntime JSRuntime
@inject SicemService sicemService

<div class="sidebar-menu h-100">
    <MatNavMenu @ref="navMenu">

        @if(OpcionesDisponibles.Contains(12)){
        <MatNavItem Title="Consulta General Test" Href="/consultaGeneral">
            <MatIcon Icon="assignment_ind"/>&nbsp;Consulta General
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(11)){
        <MatNavItem Title="Busqueda Avanzada Test" Href="/analisisInfo">
            <MatIcon Icon="search"/>&nbsp;Busqueda Avanzada
        </MatNavItem>
        }

        <MatDivider></MatDivider>

        @if(OpcionesDisponibles.Contains(1)){
        <MatNavItem Title="Recaudacion" Href="/recaudacion">
            <MatIcon Icon="local_atm"/>&nbsp;Recaudación
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(17)){
        <MatNavItem Title="Recaudacion TPV" Href="/ptv">
            <MatIcon Icon="mobile_friendly"/>&nbsp;Recaudacion TPV
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(15)){
        <MatNavSubMenu>
            <MatNavSubMenuHeader Title="Pago En Linea">
                <MatNavItem AllowSelection="false">
                    <MatIcon Icon="payment"/>&nbsp;Pago En Linea
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Title="Resumen Ingresos" Href="/PagoLinea">
                    <MatIcon Icon="library_books"/>&nbsp;Resumen Ingresos
                </MatNavItem>
                <MatNavItem Title="Analisis" Href="/PagoLineaAnalitycs">
                    <MatIcon Icon="cloud_upload"/>&nbsp;Incorporación de Pagos
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>
        }


        @if(OpcionesDisponibles.Contains(2)){
        <MatNavItem Title="Descuentos" Href="/descuentos">
            <MatIcon Icon="book"/>&nbsp;Descuentos
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(5)){
        <MatNavItem Title="Facturación" Href="/facturacion">
            <MatIcon Icon="receipt"/>&nbsp;Facturación
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(13)){
        <MatNavItem Title="Eficiencia Comercial" Href="/Eficiencia">
            <MatIcon Icon="attach_money"/>&nbsp;Eficiencia Comercial
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(14)){
        <MatNavItem Title="Micromedición" Href="/micromedicion">
            <MatIcon Icon="looks"/>&nbsp;Micromedición
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(9)){
        <MatNavItem Title="Padrón de Usuarios" Href="/padron">
            <MatIcon Icon="supervisor_account"/>&nbsp;Padrón de Usuarios
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(10)){
        <MatNavItem Title="Ordenes de Trabajo" Href="/ordenes">
            <MatIcon Icon="event_note"/>&nbsp;Ordenes de Trabajo
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(8)){
        <MatNavItem Title="Antiguedad de Saldos" Href="/controlRezago">
            <MatIcon Icon="ballot"/>&nbsp;Antiguedad de Saldos
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(16)){
        <MatNavItem Title="Atención de Usuarios" Href="/atencion">
            <MatIcon Icon="beenhere"/>&nbsp;Atención de Usuarios
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(17)){
        <MatNavItem Title="Ponte Al Corriente" Href="/ponteAlCorriente">
            <MatIcon Icon="label_important"/>&nbsp;Ponte Al Corriente
        </MatNavItem>
        }

        @if(OpcionesDisponibles.Contains(18)){
        <MatNavItem Title="Seguimiento Pagos" Href="/seguimientoCobros">
            <MatIcon Icon="map"/>&nbsp;Seguimiento Pagos
        </MatNavItem>
        }
        <MatDivider></MatDivider>

        @if(sicemService.Usuario.Administrador){
        <MatNavItem Title="Configuración" Href="/configuracion">
            <MatIcon Icon="settings"/>&nbsp;Configuración
        </MatNavItem>
        }

    </MatNavMenu>

</div>

@code {
    [Parameter] public EventCallback MenuItemClick {get;set;}

    public string msg = "test";
    private bool collapseNavMenu = true;
    
    private MatNavMenu navMenu;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private IEnumerable<int> OpcionesDisponibles {
        get{
            try
            {
                return sicemService.Usuario.OpcionSistemas.Select(item => item.Id);
            }
            catch(Exception){
                return new int[]{};
            }
        }
    }

    private void ToggleNavMenu() {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task MenuClick(int key) {
        if (key != -1) {
            await JSRuntime.InvokeVoidAsync("RemoverCSSClass", new string[] { ".itemMenu", "active" });
            await JSRuntime.InvokeVoidAsync("AgregarCSSClass", new string[] { $".itemMenu[Key={key}]", "active" });
        }
        
        try{
            await MenuItemClick.InvokeAsync(null);
        }catch(Exception){
        }
    }

}
